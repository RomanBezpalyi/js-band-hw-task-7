{"version":3,"sources":["configs/index.js","components/Header/index.js","components/Header/Header.jsx","redux/modalController/selectors.js","redux/todoInEditMode/selectors.js","redux/modalController/actions.js","redux/todoInEditMode/actions.js","redux/filters/selectors.js","redux/filters/actions.js","components/Form/ProgressSelect/index.js","components/Form/ProgressSelect/ProgressSelect.jsx","components/Form/PrioritySelect/index.js","components/Form/PrioritySelect/PrioritySelect.jsx","components/Form/Form.jsx","components/Form/index.js","components/Form/FormContainer.js","redux/todos/selectors.js","helpers/filterTodos.js","redux/todos/actions.js","components/ItemButton/index.js","components/ItemButton/ItemButton.jsx","components/ButtonDropdown/ButtonDropdown.jsx","components/ButtonDropdown/ButtonDropdownContainer.js","components/ButtonDropdown/index.js","components/TodoItem/index.js","components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/TodoList/index.js","components/TodoList/TodoListContainer.js","components/Modal/Modal.jsx","components/Modal/ModalContainer.js","components/Modal/index.js","components/Dashboard/Dashboard.jsx","components/Dashboard/DashboardContainer.js","components/Dashboard/index.js","components/Footer/index.js","components/Footer/Footer.jsx","components/pages/TodosPage.jsx","components/pages/NotFoundPage.jsx","components/App/App.jsx","components/App/index.js","redux/modalController/reducer.js","redux/todoInEditMode/reducer.js","redux/todos/reducer.js","redux/filters/reducer.js","redux/store.js","redux/index.js","index.js"],"names":["toast","configure","Header","className","getModalStatus","state","isModalOpen","getTodoInEditMode","todoInEditMode","ActionTypes","openModal","type","closeModal","removeTodoFromEditMode","getTitle","filters","title","getPriority","priority","getProgress","progress","ProgressSelect","value","handleChange","name","onChange","PrioritySelect","Form","placeholder","onClick","connect","dispatch","target","payload","setFilter","getTodos","todos","filterTodos","filteredTodos","filter","todo","toLowerCase","includes","isDone","updateTodo","ItemButton","text","handleClick","classNames","ButtonDropdown","handleDoneClick","handleEditClick","handleDeleteClick","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","todoToUpdate","deleteTodo","putTodoToEditMode","TodoItem","label","itemClass","description","TodoList","map","key","defaultProps","Modal","props","length","setState","handleSubmit","e","preventDefault","addTodo","shortid","error","this","onSubmit","htmlFor","rows","Component","mDTP","Dashboard","backdropRef","createRef","handleKeyPress","code","handleClose","handleBackdropClick","current","window","addEventListener","removeEventListener","ref","role","Footer","TodosPage","NotFoundPage","App","exact","from","to","path","component","index","indexOf","find","slice","initialState","rootReducer","combineReducers","store","createStore","ReactDOM","render","basename","document","getElementById"],"mappings":"qNAGAA,IAAMC,Y,2DCDSC,ECAA,kBACb,4BAAQC,UAAU,iCAChB,yBAAKA,UAAU,aACb,wBAAIA,UAAU,gBAAd,aCHSC,EAFQ,SAAAC,GAAK,OAAIA,EAAMC,aCEvBC,EAFW,SAAAF,GAAK,OAAIA,EAAMG,gBCA5BC,EACC,aADDA,EAEE,cAGFC,EAAY,iBAAO,CAC9BC,KAAMF,IAGKG,EAAa,iBAAO,CAC/BD,KAAMF,ICVKA,EACY,wBADZA,EAEiB,6BAQjBI,EAAyB,iBAAO,CAC3CF,KAAMF,I,wCCXKK,EAAW,SAAAT,GAAK,OAAIA,EAAMU,QAAQC,OAElCC,EAAc,SAAAZ,GAAK,OAAIA,EAAMU,QAAQG,UAErCC,EAAc,SAAAd,GAAK,OAAIA,EAAMU,QAAQK,UCJrCX,EACO,mBADPA,EAEG,eAFHA,EAGG,eCDDY,ECCQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,aAAV,OACrB,4BACEpB,UAAU,iCACVmB,MAAOA,EACPE,KAAK,WACLC,SAAUF,GAEV,4BAAQD,MAAM,OAAd,OACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,UCVWI,ECCQ,SAAC,GAAD,IAAGJ,EAAH,EAAGA,MAAOC,EAAV,EAAUA,aAAV,OACrB,4BACEpB,UAAU,iCACVmB,MAAOA,EACPE,KAAK,WACLC,SAAUF,GAEV,4BAAQD,MAAM,OAAd,OACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,OAAd,SCsBWK,EA9BF,SAAC,GAAD,IAAGX,EAAH,EAAGA,MAAOE,EAAV,EAAUA,SAAUE,EAApB,EAAoBA,SAAUV,EAA9B,EAA8BA,UAAWe,EAAzC,EAAyCA,SAAzC,OACX,0BAAMtB,UAAU,8BACd,2BACEA,UAAU,iCACVmB,MAAON,EACPQ,KAAK,QACLb,KAAK,OACLc,SAAUA,EACVG,YAAY,oBAEd,kBAAC,EAAD,CAAgBN,MAAOF,EAAUG,aAAcE,IAC/C,kBAAC,EAAD,CAAgBH,MAAOJ,EAAUK,aAAcE,IAC/C,4BACEtB,UAAU,6CACVQ,KAAK,SACLkB,QAASnB,GAHX,YCfWiB,ECmCAG,aA3BF,SAAAzB,GAAK,MAAK,CACrBW,MAAOF,EAAST,GAChBe,SAAUD,EAAYd,GACtBa,SAAUD,EAAYZ,OAGX,SAAA0B,GAAQ,MAAK,CACxBN,SAAU,YAAkC,IACtCd,EADqC,IAA9BqB,OAAUV,EAAoB,EAApBA,MAErB,OAFyC,EAAbE,MAG1B,IAAK,QACHb,EAAOF,EACP,MACF,IAAK,WACHE,EAAOF,EACP,MACF,IAAK,WACHE,EAAOF,EACP,MACF,QACE,OAEJsB,EP1BqB,SAACpB,EAAMW,GAAP,MAAkB,CACzCW,QAASX,EACTX,QOwBWuB,CAAUvB,EAAMW,KAE3BZ,UAAW,kBAAMqB,EAASrB,SAGboB,CAAoBH,GCnCpBQ,EAFE,SAAA9B,GAAK,OAAIA,EAAM+B,O,QCkBjBC,EAlBK,SAACD,EAAOpB,EAAOE,EAAUE,GAC3C,IAAIkB,EAAa,YAAOF,GASxB,GARIpB,IACFsB,EAAgBA,EAAcC,QAAO,SAAAC,GAAI,OACvCA,EAAKxB,MAAMyB,cAAcC,SAAS1B,EAAMyB,mBAG3B,QAAbvB,IACFoB,EAAgBA,EAAcC,QAAO,SAAAC,GAAI,OAAIA,EAAKtB,WAAaA,MAEhD,QAAbE,EAAoB,CACtB,IAAMuB,EAAsB,SAAbvB,EACfkB,EAAgBA,EAAcC,QAAO,SAAAC,GAAI,OAAIA,EAAKG,SAAWA,KAG/D,OAAOL,G,QCfI7B,EACD,WADCA,EAEE,cAFFA,EAGE,cAQFmC,EAAa,SAAAJ,GAAI,MAAK,CACjC7B,KAAMF,EACNwB,QAASO,ICXIK,ECCI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,YAAaC,EAAtB,EAAsBA,WAAtB,OACjB,4BACErC,KAAK,SACLkB,QAASkB,EACT5C,UAAS,2BAAsB6C,IAE9BF,ICgDUG,EArDQ,SAAC,GAAD,IACrBT,EADqB,EACrBA,KACAU,EAFqB,EAErBA,gBACAC,EAHqB,EAGrBA,gBACAC,EAJqB,EAIrBA,kBAJqB,OAMrB,yBAAKjD,UAAU,YACb,4BACEA,UAAU,kCACVkD,GAAG,gBACHC,cAAY,WACZC,gBAAc,OACdC,gBAAc,OACd7C,KAAK,UANP,OAUA,wBAAIR,UAAU,8BAA8BsD,kBAAgB,iBAC1D,4BACE,kBAAC,EAAD,CACEV,YAAa,kBAAMG,EAAgBV,IACnCM,KAAMN,EAAKG,OAAS,OAAS,OAC7BK,WAAW,iBAGf,4BACE,kBAAC,EAAD,CACED,YAAa,kBAAMI,EAAgBX,IACnCM,KAAK,OACLE,WAAW,iBAGf,4BACE,kBAAC,EAAD,CACED,YAAa,kBAAMK,EAAkBZ,IACrCM,KAAK,SACLE,WAAW,mB,8NClCrB,ICJeC,EDgBAnB,YAAQ,MAZV,SAAAC,GAAQ,MAAK,CACxBmB,gBAAiB,SAAAV,GACf,IAAMkB,E,yWAAY,IAAQlB,EAAR,CAAcG,QAASH,EAAKG,SAC9CZ,EAASa,EAAWc,KAEtBN,kBAAmB,SAAAZ,GAAI,OAAIT,EJKH,SAAAS,GAAI,MAAK,CACjC7B,KAAMF,EACNwB,QAASO,GIP2BmB,CAAWnB,KAC/CW,gBAAiB,SAAAX,GACfT,EhBR6B,SAAAS,GAAI,MAAK,CACxC7B,KAAMF,EACNwB,QAASO,GgBMEoB,CAAkBpB,IAC3BT,EAASrB,SAIEoB,CAAoBmB,GEhBpBY,ECEE,SAAC,GAAc,IAC1BC,EADctB,EAAW,EAAXA,KAElB,OAAQA,EAAKtB,UACX,IAAK,OACH4C,EAAQ,SACR,MACF,IAAK,SACHA,EAAQ,UACR,MACF,QACEA,EAAQ,UAIZ,IAAMC,EAAYvB,EAAKG,OAAS,kBAAoB,YACpD,OACE,6BAASxC,UAAS,oBAAe4D,IAC/B,wBAAI5D,UAAU,MAAMqC,EAAKxB,OACzB,2BAAIwB,EAAKwB,aACT,yBAAK7D,UAAU,gBACb,0BAAMA,UAAS,sBAAiB2D,IAAhC,IAA2CtB,EAAKtB,UAChD,kBAAC,EAAD,CAAgBsB,KAAMA,OCrBxByB,EAAW,SAAC,GAAD,IAAG7B,EAAH,EAAGA,MAAH,OACf,wBAAIjC,UAAU,2BACXiC,EAAM8B,KAAI,SAAA1B,GAAI,OACb,wBAAI2B,IAAK3B,EAAKa,GAAIlD,UAAU,+BAC1B,kBAAC,EAAD,CAAUqC,KAAMA,UAMxByB,EAASG,aAAe,CACtBhC,MAAO,IAeM6B,QC5BAA,ECiBAnC,aATF,SAAAzB,GAAK,MAAK,CACrB+B,MAAOC,EACLF,EAAS9B,GACTS,EAAST,GACTY,EAAYZ,GACZc,EAAYd,OAIDyB,CAAcmC,G,iBCdRI,G,YAmBnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAkBR/C,aAAe,YAAkC,IAAD,IAA9BS,OAAUV,EAAoB,EAApBA,MAAOE,EAAa,EAAbA,KAErB,UAATA,GAAoBF,EAAMiD,OAAS,IAC1B,gBAAT/C,GAA0BF,EAAMiD,OAAS,IAG5C,EAAKC,SAAL,eAAiBhD,EAAOF,KAzBP,EA4BnBmD,aAAe,SAAAC,GACbA,EAAEC,iBADgB,MAE+B,EAAKtE,MAA9CW,EAFU,EAEVA,MAAOgD,EAFG,EAEHA,YAAa9C,EAFV,EAEUA,SAAUyB,EAFpB,EAEoBA,OAFpB,EASd,EAAK2B,MALP9D,EAJgB,EAIhBA,eACAoE,EALgB,EAKhBA,QACAhC,EANgB,EAMhBA,WACA/B,EAPgB,EAOhBA,uBACAD,EARgB,EAQhBA,WAEI4B,EAAO,CAAExB,QAAOgD,cAAa9C,WAAUyB,UACxC3B,GAAUgD,GAIXxD,GACFgC,EAAKa,GAAK7C,EAAe6C,GACzBT,EAAWJ,GACX3B,MAEA2B,EAAKa,GAAKwB,MACVD,EAAQpC,IAEV5B,KAXEZ,IAAM8E,MAAM,yBArCd,EAAKzE,MAAQ,CACXW,MAAO,GACPgD,YAAa,GACb9C,SAAU,MACVyB,QAAQ,GAPO,E,iFAWE,IACXnC,EAAmBuE,KAAKT,MAAxB9D,eACR,GAAIA,EAAgB,CAAC,IACXQ,EAAyCR,EAAzCQ,MAAOgD,EAAkCxD,EAAlCwD,YAAa9C,EAAqBV,EAArBU,SAAUyB,EAAWnC,EAAXmC,OACtCoC,KAAKP,SAAS,CAAExD,QAAOgD,cAAa9C,WAAUyB,c,+BAuCxC,IAAD,EACkCoC,KAAK1E,MAAtCW,EADD,EACCA,MAAOgD,EADR,EACQA,YAAa9C,EADrB,EACqBA,SACpBN,EAAemE,KAAKT,MAApB1D,WACR,OACE,0BACET,UAAU,yCACV6E,SAAUD,KAAKN,cAEf,2BAAOQ,QAAQ,aAAf,SAEE,2BACE5B,GAAG,YACH7B,KAAK,QACLF,MAAON,EACPb,UAAU,eACVQ,KAAK,OACLiB,YAAY,QACZH,SAAUsD,KAAKxD,gBAGnB,2BAAO0D,QAAQ,iBAAf,eAEE,8BACEC,KAAK,IACL7B,GAAG,gBACH/B,MAAO0C,EACPxC,KAAK,cACLrB,UAAU,wBACVyB,YAAY,cACZH,SAAUsD,KAAKxD,gBAGnB,2BAAO0D,QAAQ,eAAf,YAEE,4BACE5B,GAAG,cACHlD,UAAU,eACVmB,MAAOJ,EACPO,SAAUsD,KAAKxD,aACfC,KAAK,YAEL,4BAAQF,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,OAAd,SAGJ,yBAAKnB,UAAU,2BACb,4BAAQQ,KAAK,SAASR,UAAU,4BAAhC,QAGA,4BACEQ,KAAK,SACLR,UAAU,2BACV0B,QAASjB,GAHX,gB,GA3HyBuE,aAAdd,GAeZD,aAAe,CACpB5D,eAAgB,MCdpB,IAEM4E,GAAO,CAAExE,aAAYgE,QZHJ,SAAApC,GAAI,MAAK,CAC9B7B,KAAMF,EACNwB,QAASO,IYCyBI,aAAY/B,0BCPjCwD,GDSAvC,aAJF,SAAAzB,GAAK,MAAK,CAAEG,eAAgBD,EAAkBF,MAI9B+E,GAAdtD,CAAoBuC,IELdgB,G,2MACnBC,YAAcC,sB,EA2BdC,eAAiB,SAAAd,GACA,WAAXA,EAAEe,MACN,EAAKC,e,EAGPC,oBAAsB,SAAAjB,GAAM,IAClBkB,EAAY,EAAKN,YAAjBM,QACJA,GAAWlB,EAAE1C,SAAW4D,GAG5B,EAAKF,e,EAGPA,YAAc,WAAO,IAAD,EAC6C,EAAKpB,MAA5D1D,EADU,EACVA,WAAYJ,EADF,EACEA,eAAgBK,EADlB,EACkBA,uBAChCL,GAAgBK,IACpBD,K,mFAvBAiF,OAAOC,iBAAiB,UAAWf,KAAKS,kB,4CAIxCK,OAAOE,oBAAoB,UAAWhB,KAAKS,kB,+BAsBnC,IACAlF,EAAgByE,KAAKT,MAArBhE,YAER,OACE,0BAAMH,UAAU,gBACd,kBAAC,EAAD,MACA,kBAAC,EAAD,MACCG,GACC,yBACEH,UAAU,qBACV6F,IAAKjB,KAAKO,YACVzD,QAASkD,KAAKY,oBACdM,KAAK,UAEL,kBAAC,GAAD,Y,GA7D2Bd,aAAlBE,GAgBZjB,aAAe,CACpB5D,eAAgB,MChBpB,IAKM4E,GAAO,CAAExE,aAAYC,0BCVZwE,GDYAvD,aAPF,SAAAzB,GAAK,MAAK,CACrBC,YAAaF,EAAeC,GAC5BG,eAAgBD,EAAkBF,MAKP+E,GAAdtD,CAAoBuD,IEZpBa,GCAA,kBACb,4BAAQ/F,UAAU,qBAChB,yBAAKA,UAAU,aACb,wBAAIA,UAAU,MAAd,qBCQSgG,GARG,kBAChB,oCACE,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,QCHWC,GAJM,kBACnB,wBAAIjG,UAAU,kBAAd,4BCYakG,ICbAA,GDGf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUC,OAAK,EAACC,KAAK,IAAIC,GAAG,WAC5B,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAWP,KAChC,kBAAC,IAAD,CAAOM,KAAK,IAAIC,UAAWN,O,SEGlB9F,I,MAXK,WAA8B,IAA7BD,EAA4B,iGAAXM,EAAW,EAAXA,KACpC,OAAQA,GACN,KAAKF,EACH,OAAO,EACT,KAAKA,EACH,OAAO,EACT,QACE,OAAOJ,KCIEG,GAXQ,WAAsC,IAArCH,EAAoC,uDAA5B,KAA4B,yCAApBM,EAAoB,EAApBA,KAAMsB,EAAc,EAAdA,QAC5C,OAAQtB,GACN,KAAKF,EACH,OAAOwB,EACT,KAAKxB,EACH,OAAO,KACT,QACE,OAAOJ,ICQE+B,GAfD,WAAoC,IAAnC/B,EAAkC,uDAA1B,GAA0B,yCAApBM,EAAoB,EAApBA,KAAMsB,EAAc,EAAdA,QACjC,OAAQtB,GACN,KAAKF,EACH,MAAM,CAAEwB,GAAR,mBAAoB5B,IACtB,KAAKI,EACH,IAAMkG,EAAQtG,EAAMuG,QAAQvG,EAAMwG,MAAK,SAAArE,GAAI,OAAIA,EAAKa,KAAOpB,EAAQoB,OACnE,MAAM,GAAN,mBAAWhD,EAAMyG,MAAM,EAAGH,IAA1B,CAAkC1E,GAAlC,YAA8C5B,EAAMyG,MAAMH,EAAQ,KAEpE,KAAKlG,EACH,OAAO,YAAIJ,EAAMkC,QAAO,SAAAC,GAAI,OAAIA,IAASP,MAC3C,QACE,OAAO5B,I,6kBCXb,IAAM0G,GAAe,CACnB/F,MAAO,GACPI,SAAU,MACVF,SAAU,OAgBGH,GAbC,WAA8C,IAA7CV,EAA4C,uDAApC0G,GAAoC,yCAApBpG,EAAoB,EAApBA,KAAMsB,EAAc,EAAdA,QAC7C,OAAQtB,GACN,KAAKF,EACH,OAAO,MAAKJ,EAAZ,CAAmBW,MAAOiB,IAC5B,KAAKxB,EACH,OAAO,MAAKJ,EAAZ,CAAmBe,SAAUa,IAC/B,KAAKxB,EACH,OAAO,MAAKJ,EAAZ,CAAmBa,SAAUe,IAC/B,QACE,OAAO5B,ICVP2G,GAAcC,2BAAgB,CAClC7E,SACA9B,eACAE,kBACAO,aCTamG,GDeDC,uBAAYH,GAFsC,MENhEI,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAOA,IACf,kBAAC,IAAD,CAAYI,SAAS,KACnB,kBAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.4bf6847f.chunk.js","sourcesContent":["import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\n","import Header from './Header';\n\nexport default Header;\n","import React from 'react';\n\nconst Header = () => (\n  <header className=\"page-header bg-primary header\">\n    <div className=\"container\">\n      <h1 className=\"h1 text-left\">MyToDo</h1>\n    </div>\n  </header>\n);\n\nexport default Header;\n","const getModalStatus = state => state.isModalOpen;\n\nexport default getModalStatus;\n","const getTodoInEditMode = state => state.todoInEditMode;\n\nexport default getTodoInEditMode;\n","export const ActionTypes = {\n  OPEN_MODAL: 'OPEN_MODAL',\n  CLOSE_MODAL: 'CLOSE_MODAL',\n};\n\nexport const openModal = () => ({\n  type: ActionTypes.OPEN_MODAL,\n});\n\nexport const closeModal = () => ({\n  type: ActionTypes.CLOSE_MODAL,\n});\n","export const ActionTypes = {\n  PUT_TODO_TO_EDIT_MODE: 'PUT_TODO_TO_EDIT_MODE',\n  REMOVE_TODO_FROM_EDIT_MODE: 'REMOVE_TODO_FROM_EDIT_MODE',\n};\n\nexport const putTodoToEditMode = todo => ({\n  type: ActionTypes.PUT_TODO_TO_EDIT_MODE,\n  payload: todo,\n});\n\nexport const removeTodoFromEditMode = () => ({\n  type: ActionTypes.REMOVE_TODO_FROM_EDIT_MODE,\n});\n","export const getTitle = state => state.filters.title;\n\nexport const getPriority = state => state.filters.priority;\n\nexport const getProgress = state => state.filters.progress;\n","export const ActionTypes = {\n  SET_SEARCH_QUERY: 'SET_SEARCH_QUERY',\n  SET_PRIORITY: 'SET_PRIORITY',\n  SET_PROGRESS: 'SET_PROGRESS',\n};\n\nexport const setFilter = (type, value) => ({\n  payload: value,\n  type,\n});\n","import ProgressSelect from './ProgressSelect';\n\nexport default ProgressSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProgressSelect = ({ value, handleChange }) => (\n  <select\n    className=\"form-control col-xs-6 col-md-3\"\n    value={value}\n    name=\"progress\"\n    onChange={handleChange}\n  >\n    <option value=\"All\">All</option>\n    <option value=\"Open\">Open</option>\n    <option value=\"Done\">Done</option>\n  </select>\n);\n\nProgressSelect.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default ProgressSelect;\n","import PrioritySelect from './PrioritySelect';\n\nexport default PrioritySelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PrioritySelect = ({ value, handleChange }) => (\n  <select\n    className=\"form-control col-xs-6 col-md-3\"\n    value={value}\n    name=\"priority\"\n    onChange={handleChange}\n  >\n    <option value=\"All\">All</option>\n    <option value=\"High\">High</option>\n    <option value=\"Normal\">Normal</option>\n    <option value=\"Low\">Low</option>\n  </select>\n);\n\nPrioritySelect.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default PrioritySelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProgressSelect from './ProgressSelect';\nimport PrioritySelect from './PrioritySelect';\n\nconst Form = ({ title, priority, progress, openModal, onChange }) => (\n  <form className=\"form-inline container form\">\n    <input\n      className=\"form-control col-xs-6 col-md-3\"\n      value={title}\n      name=\"title\"\n      type=\"text\"\n      onChange={onChange}\n      placeholder=\"Search by title\"\n    />\n    <ProgressSelect value={progress} handleChange={onChange} />\n    <PrioritySelect value={priority} handleChange={onChange} />\n    <button\n      className=\"btn btn-primary col-xs-6 col-sm-4 col-md-1\"\n      type=\"button\"\n      onClick={openModal}\n    >\n      Create\n    </button>\n  </form>\n);\n\nForm.propTypes = {\n  title: PropTypes.string.isRequired,\n  priority: PropTypes.string.isRequired,\n  progress: PropTypes.string.isRequired,\n  openModal: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import Form from './FormContainer';\n\nexport default Form;\n","import { connect } from 'react-redux';\nimport {\n  getTitle,\n  getPriority,\n  getProgress,\n} from '../../redux/filters/selectors';\nimport { ActionTypes, setFilter } from '../../redux/filters/actions';\nimport { openModal } from '../../redux/modalController/actions';\nimport Form from './Form';\n\nconst mSTP = state => ({\n  title: getTitle(state),\n  progress: getProgress(state),\n  priority: getPriority(state),\n});\n\nconst mDTP = dispatch => ({\n  onChange: ({ target: { value, name } }) => {\n    let type;\n    switch (name) {\n      case 'title':\n        type = ActionTypes.SET_SEARCH_QUERY;\n        break;\n      case 'progress':\n        type = ActionTypes.SET_PROGRESS;\n        break;\n      case 'priority':\n        type = ActionTypes.SET_PRIORITY;\n        break;\n      default:\n        return;\n    }\n    dispatch(setFilter(type, value));\n  },\n  openModal: () => dispatch(openModal()),\n});\n\nexport default connect(mSTP, mDTP)(Form);\n","const getTodos = state => state.todos;\n\nexport default getTodos;\n","const filterTodos = (todos, title, priority, progress) => {\n  let filteredTodos = [...todos];\n  if (title) {\n    filteredTodos = filteredTodos.filter(todo =>\n      todo.title.toLowerCase().includes(title.toLowerCase()),\n    );\n  }\n  if (priority !== 'All') {\n    filteredTodos = filteredTodos.filter(todo => todo.priority === priority);\n  }\n  if (progress !== 'All') {\n    const isDone = progress === 'Done';\n    filteredTodos = filteredTodos.filter(todo => todo.isDone === isDone);\n  }\n\n  return filteredTodos;\n};\n\nexport default filterTodos;\n","export const ActionTypes = {\n  ADD_TODO: 'ADD_TODO',\n  UPDATE_TODO: 'UPDATE_TODO',\n  DELETE_TODO: 'DELETE_TODO',\n};\n\nexport const addTodo = todo => ({\n  type: ActionTypes.ADD_TODO,\n  payload: todo,\n});\n\nexport const updateTodo = todo => ({\n  type: ActionTypes.UPDATE_TODO,\n  payload: todo,\n});\n\nexport const deleteTodo = todo => ({\n  type: ActionTypes.DELETE_TODO,\n  payload: todo,\n});\n","import ItemButton from './ItemButton';\n\nexport default ItemButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ItemButton = ({ text, handleClick, classNames }) => (\n  <button\n    type=\"button\"\n    onClick={handleClick}\n    className={`dropdown-btn btn ${classNames}`}\n  >\n    {text}\n  </button>\n);\n\nItemButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  classNames: PropTypes.string.isRequired,\n};\n\nexport default ItemButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ItemButton from '../ItemButton';\n\nconst ButtonDropdown = ({\n  todo,\n  handleDoneClick,\n  handleEditClick,\n  handleDeleteClick,\n}) => (\n  <div className=\"dropdown\">\n    <button\n      className=\"btn btn-primary dropdown-toggle\"\n      id=\"dropdownMenu1\"\n      data-toggle=\"dropdown\"\n      aria-haspopup=\"true\"\n      aria-expanded=\"true\"\n      type=\"button\"\n    >\n      ...\n    </button>\n    <ul className=\"dropdown-menu dropdown-list\" aria-labelledby=\"dropdownMenu1\">\n      <li>\n        <ItemButton\n          handleClick={() => handleDoneClick(todo)}\n          text={todo.isDone ? 'Open' : 'Done'}\n          classNames=\"btn-success\"\n        />\n      </li>\n      <li>\n        <ItemButton\n          handleClick={() => handleEditClick(todo)}\n          text=\"Edit\"\n          classNames=\"btn-warning\"\n        />\n      </li>\n      <li>\n        <ItemButton\n          handleClick={() => handleDeleteClick(todo)}\n          text=\"Delete\"\n          classNames=\"btn-danger\"\n        />\n      </li>\n    </ul>\n  </div>\n);\n\nButtonDropdown.propTypes = {\n  todo: PropTypes.shape({\n    isDone: PropTypes.bool.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n  handleDoneClick: PropTypes.func.isRequired,\n  handleEditClick: PropTypes.func.isRequired,\n  handleDeleteClick: PropTypes.func.isRequired,\n};\n\nexport default ButtonDropdown;\n","import { connect } from 'react-redux';\nimport { openModal } from '../../redux/modalController/actions';\nimport { updateTodo, deleteTodo } from '../../redux/todos/actions';\nimport { putTodoToEditMode } from '../../redux/todoInEditMode/actions';\nimport ButtonDropdown from './ButtonDropdown';\n\nconst mDTP = dispatch => ({\n  handleDoneClick: todo => {\n    const todoToUpdate = { ...todo, isDone: !todo.isDone };\n    dispatch(updateTodo(todoToUpdate));\n  },\n  handleDeleteClick: todo => dispatch(deleteTodo(todo)),\n  handleEditClick: todo => {\n    dispatch(putTodoToEditMode(todo));\n    dispatch(openModal());\n  },\n});\n\nexport default connect(null, mDTP)(ButtonDropdown);\n","import ButtonDropdown from './ButtonDropdownContainer';\n\nexport default ButtonDropdown;\n","import TodoItem from './TodoItem';\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonDropdown from '../ButtonDropdown';\n\nconst TodoItem = ({ todo }) => {\n  let label;\n  switch (todo.priority) {\n    case 'High':\n      label = 'danger';\n      break;\n    case 'Normal':\n      label = 'warning';\n      break;\n    default:\n      label = 'success';\n      break;\n  }\n\n  const itemClass = todo.isDone ? 'list-item--done' : 'list-item';\n  return (\n    <section className={`thumbnail ${itemClass}`}>\n      <h3 className=\"h3\">{todo.title}</h3>\n      <p>{todo.description}</p>\n      <div className=\"item-wrapper\">\n        <span className={`label label-${label}`}> {todo.priority}</span>\n        <ButtonDropdown todo={todo} />\n      </div>\n    </section>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    priority: PropTypes.string.isRequired,\n    isDone: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../TodoItem';\n\nconst TodoList = ({ todos }) => (\n  <ul className=\"container list-unstyled\">\n    {todos.map(todo => (\n      <li key={todo.id} className=\"col-xs-12 col-sm-6 col-md-3\">\n        <TodoItem todo={todo} />\n      </li>\n    ))}\n  </ul>\n);\n\nTodoList.defaultProps = {\n  todos: [],\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      priority: PropTypes.string.isRequired,\n      isDone: PropTypes.bool.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TodoList;\n","import TodoList from './TodoListContainer';\n\nexport default TodoList;\n","import { connect } from 'react-redux';\nimport getTodos from '../../redux/todos/selectors';\nimport {\n  getPriority,\n  getProgress,\n  getTitle,\n} from '../../redux/filters/selectors';\nimport filterTodos from '../../helpers/filterTodos';\nimport TodoList from './TodoList';\n\nconst mSTP = state => ({\n  todos: filterTodos(\n    getTodos(state),\n    getTitle(state),\n    getPriority(state),\n    getProgress(state),\n  ),\n});\n\nexport default connect(mSTP)(TodoList);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport shortid from 'shortid';\n\nexport default class Modal extends Component {\n  static propTypes = {\n    closeModal: PropTypes.func.isRequired,\n    addTodo: PropTypes.func.isRequired,\n    updateTodo: PropTypes.func.isRequired,\n    removeTodoFromEditMode: PropTypes.func.isRequired,\n    todoInEditMode: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      priority: PropTypes.string.isRequired,\n      isDone: PropTypes.bool.isRequired,\n    }),\n  };\n\n  static defaultProps = {\n    todoInEditMode: null,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: '',\n      description: '',\n      priority: 'Low',\n      isDone: false,\n    };\n  }\n\n  componentDidMount() {\n    const { todoInEditMode } = this.props;\n    if (todoInEditMode) {\n      const { title, description, priority, isDone } = todoInEditMode;\n      this.setState({ title, description, priority, isDone });\n    }\n  }\n\n  handleChange = ({ target: { value, name } }) => {\n    if (\n      (name === 'title' && value.length > 16) ||\n      (name === 'description' && value.length > 25)\n    )\n      return;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { title, description, priority, isDone } = this.state;\n    const {\n      todoInEditMode,\n      addTodo,\n      updateTodo,\n      removeTodoFromEditMode,\n      closeModal,\n    } = this.props;\n    const todo = { title, description, priority, isDone };\n    if (!title || !description) {\n      toast.error('Fill all the fields.');\n      return;\n    }\n    if (todoInEditMode) {\n      todo.id = todoInEditMode.id;\n      updateTodo(todo);\n      removeTodoFromEditMode();\n    } else {\n      todo.id = shortid();\n      addTodo(todo);\n    }\n    closeModal();\n  };\n\n  render() {\n    const { title, description, priority } = this.state;\n    const { closeModal } = this.props;\n    return (\n      <form\n        className=\"thumbnail col-md-4 cl-xs-10 modal-form\"\n        onSubmit={this.handleSubmit}\n      >\n        <label htmlFor=\"textLabel\">\n          Title:\n          <input\n            id=\"textLabel\"\n            name=\"title\"\n            value={title}\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Title\"\n            onChange={this.handleChange}\n          />\n        </label>\n        <label htmlFor=\"textareaLabel\">\n          Description:\n          <textarea\n            rows=\"5\"\n            id=\"textareaLabel\"\n            value={description}\n            name=\"description\"\n            className=\"form-control textarea\"\n            placeholder=\"Description\"\n            onChange={this.handleChange}\n          />\n        </label>\n        <label htmlFor=\"selectLabel\">\n          Priority:\n          <select\n            id=\"selectLabel\"\n            className=\"form-control\"\n            value={priority}\n            onChange={this.handleChange}\n            name=\"priority\"\n          >\n            <option value=\"High\">High</option>\n            <option value=\"Normal\">Normal</option>\n            <option value=\"Low\">Low</option>\n          </select>\n        </label>\n        <div className=\"row modal-form__wrapper\">\n          <button type=\"submit\" className=\"btn btn-primary col-md-3\">\n            Save\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-default col-md-3\"\n            onClick={closeModal}\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport getTodoInEditMode from '../../redux/todoInEditMode/selectors';\nimport { closeModal } from '../../redux/modalController/actions';\nimport { addTodo, updateTodo } from '../../redux/todos/actions';\nimport { removeTodoFromEditMode } from '../../redux/todoInEditMode/actions';\nimport Modal from './Modal';\n\nconst mSTP = state => ({ todoInEditMode: getTodoInEditMode(state) });\n\nconst mDTP = { closeModal, addTodo, updateTodo, removeTodoFromEditMode };\n\nexport default connect(mSTP, mDTP)(Modal);\n","import Modal from './ModalContainer';\n\nexport default Modal;\n","import React, { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from '../Form';\nimport TodoList from '../TodoList';\nimport Modal from '../Modal';\n\nexport default class Dashboard extends Component {\n  backdropRef = createRef();\n\n  static propTypes = {\n    todoInEditMode: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      priority: PropTypes.string.isRequired,\n      isDone: PropTypes.bool.isRequired,\n    }),\n    isModalOpen: PropTypes.bool.isRequired,\n    closeModal: PropTypes.func.isRequired,\n    removeTodoFromEditMode: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    todoInEditMode: null,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUnmout() {\n    window.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleKeyPress = e => {\n    if (e.code !== 'Escape') return;\n    this.handleClose();\n  };\n\n  handleBackdropClick = e => {\n    const { current } = this.backdropRef;\n    if (current && e.target !== current) {\n      return;\n    }\n    this.handleClose();\n  };\n\n  handleClose = () => {\n    const { closeModal, todoInEditMode, removeTodoFromEditMode } = this.props;\n    if (todoInEditMode) removeTodoFromEditMode();\n    closeModal();\n  };\n\n  render() {\n    const { isModalOpen } = this.props;\n\n    return (\n      <main className=\"main-content\">\n        <Form />\n        <TodoList />\n        {isModalOpen && (\n          <div\n            className=\"backdrop container\"\n            ref={this.backdropRef}\n            onClick={this.handleBackdropClick}\n            role=\"button\"\n          >\n            <Modal />\n          </div>\n        )}\n      </main>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport getModalStatus from '../../redux/modalController/selectors';\nimport getTodoInEditMode from '../../redux/todoInEditMode/selectors';\nimport { closeModal } from '../../redux/modalController/actions';\nimport { removeTodoFromEditMode } from '../../redux/todoInEditMode/actions';\nimport Dashboard from './Dashboard';\n\nconst mSTP = state => ({\n  isModalOpen: getModalStatus(state),\n  todoInEditMode: getTodoInEditMode(state),\n});\n\nconst mDTP = { closeModal, removeTodoFromEditMode };\n\nexport default connect(mSTP, mDTP)(Dashboard);\n","import Dashboard from './DashboardContainer';\n\nexport default Dashboard;\n","import Footer from './Footer';\n\nexport default Footer;\n","import React from 'react';\n\nconst Footer = () => (\n  <footer className=\"bg-primary footer\">\n    <div className=\"container\">\n      <h2 className=\"h3\">Roman Bezpalyi</h2>\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport Header from '../Header';\nimport Dashboard from '../Dashboard';\nimport Footer from '../Footer';\n\nconst TodosPage = () => (\n  <>\n    <Header />\n    <Dashboard />\n    <Footer />\n  </>\n);\n\nexport default TodosPage;\n","import React from 'react';\n\nconst NotFoundPage = () => (\n  <h1 className=\"h1 text-center\">Oops... Page not found.</h1>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport TodosPage from '../pages/TodosPage';\nimport NotFoundPage from '../pages/NotFoundPage';\n\nfunction App() {\n  return (\n    <Switch>\n      <Redirect exact from=\"/\" to=\"/todos\" />\n      <Route path=\"/todos\" component={TodosPage} />\n      <Route path=\"*\" component={NotFoundPage} />\n    </Switch>\n  );\n}\n\nexport default App;\n","import App from './App';\n\nexport default App;\n","import { ActionTypes } from './actions';\n\nconst isModalOpen = (state = false, { type }) => {\n  switch (type) {\n    case ActionTypes.OPEN_MODAL:\n      return true;\n    case ActionTypes.CLOSE_MODAL:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default isModalOpen;\n","import { ActionTypes } from './actions';\n\nconst todoInEditMode = (state = null, { type, payload }) => {\n  switch (type) {\n    case ActionTypes.PUT_TODO_TO_EDIT_MODE:\n      return payload;\n    case ActionTypes.REMOVE_TODO_FROM_EDIT_MODE:\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default todoInEditMode;\n","import { ActionTypes } from './actions';\n\nconst todos = (state = [], { type, payload }) => {\n  switch (type) {\n    case ActionTypes.ADD_TODO:\n      return [payload, ...state];\n    case ActionTypes.UPDATE_TODO: {\n      const index = state.indexOf(state.find(todo => todo.id === payload.id));\n      return [...state.slice(0, index), payload, ...state.slice(index + 1)];\n    }\n    case ActionTypes.DELETE_TODO:\n      return [...state.filter(todo => todo !== payload)];\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n","import { ActionTypes } from './actions';\n\nconst initialState = {\n  title: '',\n  progress: 'All',\n  priority: 'All',\n};\n\nconst filters = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ActionTypes.SET_SEARCH_QUERY:\n      return { ...state, title: payload };\n    case ActionTypes.SET_PROGRESS:\n      return { ...state, progress: payload };\n    case ActionTypes.SET_PRIORITY:\n      return { ...state, priority: payload };\n    default:\n      return state;\n  }\n};\n\nexport default filters;\n","import { createStore, combineReducers } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport isModalOpen from './modalController/reducer';\nimport todoInEditMode from './todoInEditMode/reducer';\nimport todos from './todos/reducer';\nimport filters from './filters/reducer';\n\nconst rootReducer = combineReducers({\n  todos,\n  isModalOpen,\n  todoInEditMode,\n  filters,\n});\n\nconst enhancer =\n  process.env.NODE_ENV === 'development' ? devToolsEnhancer() : null;\n\nconst store = createStore(rootReducer, enhancer);\n\nexport default store;\n","import store from './store';\n\nexport default store;\n","import './styles/main.scss';\nimport './configs';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\nimport store from './redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter basename=\"/\">\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}