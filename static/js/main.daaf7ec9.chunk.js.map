{"version":3,"sources":["configs/index.js","components/Header/Header.jsx","components/Form/ProgressSelect/index.js","components/Form/ProgressSelect/ProgressSelect.jsx","components/Form/PrioritySelect/index.js","components/Form/PrioritySelect/PrioritySelect.jsx","components/Form/index.js","components/Form/Form.jsx","components/ItemButton/index.js","components/ItemButton/ItemButton.jsx","components/ButtonDropdown/index.js","components/ButtonDropdown/ButtonDropdown.jsx","components/TodoItem/index.js","components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/TodoList/index.js","components/Modal/Modal.jsx","components/Modal/index.js","helpers/filterTodos.js","helpers/putTodoToEditMode.js","components/Dashboard/Dashboard.jsx","components/Footer/Footer.jsx","components/pages/TodosPage.jsx","components/pages/NotFoundPage.jsx","components/App/App.jsx","components/App/index.js","index.js"],"names":["toast","configure","Header","className","ProgressSelect","value","handleChange","name","onChange","PrioritySelect","Form","title","priority","progress","handleOpenModal","type","placeholder","onClick","ItemButton","text","handleClick","classNames","ButtonDropdown","handleDone","props","todo","handleUpdateClick","doneTodo","isDone","id","handleEdit","handleEditClick","setSelectedId","handleDelete","handleDeleteClick","this","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","Component","TodoItem","label","itemClass","description","TodoList","todos","map","key","defaultProps","Modal","target","length","setState","handleSubmit","e","preventDefault","state","handleAdd","handleUpdate","handleClose","todoInEditMode","shortid","error","resetCreateForm","onSubmit","htmlFor","rows","filterTodos","filteredTodos","filter","toLowerCase","includes","putTodoToEditMode","find","Dashboard","backdropRef","createRef","handleSearchInputChange","searchForm","handleUpdateTodo","index","indexOf","task","slice","selectedTodoId","handleDeleteTodo","isModalOpen","handleCloseModal","handleKeyPress","code","handleBackdropClick","current","handleAddTodo","window","addEventListener","removeEventListener","todosToRender","ref","role","Footer","TodosPage","NotFoundPage","App","exact","path","to","component","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.daaf7ec9.chunk.js","sourcesContent":["import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\n","import React from 'react';\n\nconst Header = () => (\n  <header className=\"page-header bg-primary header\">\n    <div className=\"container\">\n      <h1 className=\"h1 text-left\">MyToDo</h1>\n    </div>\n  </header>\n);\n\nexport default Header;\n","import ProgressSelect from './ProgressSelect';\n\nexport default ProgressSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProgressSelect = ({ value, handleChange }) => (\n  <select\n    className=\"form-control col-xs-6 col-md-3\"\n    name=\"progress\"\n    value={value}\n    onChange={handleChange}\n  >\n    <option value=\"All\">All</option>\n    <option value=\"Open\">Open</option>\n    <option value=\"Done\">Done</option>\n  </select>\n);\n\nProgressSelect.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default ProgressSelect;\n","import PrioritySelect from './PrioritySelect';\n\nexport default PrioritySelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PrioritySelect = ({ value, handleChange }) => (\n  <select\n    name=\"priority\"\n    className=\"form-control col-xs-6 col-md-3\"\n    value={value}\n    onChange={handleChange}\n  >\n    <option value=\"All\">All</option>\n    <option value=\"High\">High</option>\n    <option value=\"Normal\">Normal</option>\n    <option value=\"Low\">Low</option>\n  </select>\n);\n\nPrioritySelect.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default PrioritySelect;\n","import Form from './Form';\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProgressSelect from './ProgressSelect';\nimport PrioritySelect from './PrioritySelect';\n\nconst Form = ({ title, priority, progress, handleOpenModal, handleChange }) => (\n  <form className=\"form-inline container form\">\n    <input\n      className=\"form-control col-xs-6 col-md-3\"\n      name=\"title\"\n      value={title}\n      type=\"text\"\n      onChange={handleChange}\n      placeholder=\"Search by title\"\n    />\n    <ProgressSelect value={progress} handleChange={handleChange} />\n    <PrioritySelect value={priority} handleChange={handleChange} />\n    <button\n      className=\"btn btn-primary col-xs-6 col-sm-4 col-md-1\"\n      type=\"button\"\n      onClick={handleOpenModal}\n    >\n      Create\n    </button>\n  </form>\n);\n\nForm.propTypes = {\n  title: PropTypes.string.isRequired,\n  priority: PropTypes.string.isRequired,\n  progress: PropTypes.string.isRequired,\n  handleOpenModal: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import ItemButton from './ItemButton';\n\nexport default ItemButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ItemButton = ({ text, handleClick, classNames }) => (\n  <button\n    type=\"button\"\n    onClick={handleClick}\n    className={`dropdown-btn ${classNames}`}\n  >\n    {text}\n  </button>\n);\n\nItemButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  classNames: PropTypes.string.isRequired,\n};\n\nexport default ItemButton;\n","import ButtonDropdown from './ButtonDropdown';\n\nexport default ButtonDropdown;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ItemButton from '../ItemButton';\n\nexport default class ButtonDropdown extends Component {\n  static propTypes = {\n    todo: PropTypes.shape({\n      isDone: PropTypes.bool.isRequired,\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n    handleUpdateClick: PropTypes.func.isRequired,\n    handleEditClick: PropTypes.func.isRequired,\n    handleDeleteClick: PropTypes.func.isRequired,\n    setSelectedId: PropTypes.func.isRequired,\n  };\n\n  handleDone = () => {\n    const { todo, handleUpdateClick } = this.props;\n    const doneTodo = { ...todo, isDone: !todo.isDone };\n    handleUpdateClick(doneTodo.id, doneTodo);\n  };\n\n  handleEdit = () => {\n    const { todo, handleEditClick, setSelectedId } = this.props;\n    handleEditClick(todo);\n    setSelectedId(todo.id);\n  };\n\n  handleDelete = () => {\n    const { todo, handleDeleteClick } = this.props;\n    handleDeleteClick(todo.id);\n  };\n\n  render() {\n    const { todo } = this.props;\n    return (\n      <div className=\"dropdown\">\n        <button\n          className=\"btn btn-primary dropdown-toggle\"\n          id=\"dropdownMenu1\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"true\"\n          type=\"button\"\n        >\n          ...\n        </button>\n        <ul\n          className=\"dropdown-menu dropdown-list\"\n          aria-labelledby=\"dropdownMenu1\"\n        >\n          <li>\n            <ItemButton\n              handleClick={this.handleDone}\n              text={todo.isDone ? 'Open' : 'Done'}\n              classNames=\"btn btn-success\"\n            />\n          </li>\n          <li>\n            <ItemButton\n              handleClick={this.handleEdit}\n              text=\"Edit\"\n              classNames=\"btn btn-warning\"\n            />\n          </li>\n          <li>\n            <ItemButton\n              handleClick={this.handleDelete}\n              text=\"Delete\"\n              classNames=\"btn btn-danger\"\n            />\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n","import TodoItem from './TodoItem';\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonDropdown from '../ButtonDropdown';\n\nconst TodoItem = ({\n  todo,\n  handleUpdateClick,\n  handleDeleteClick,\n  handleEditClick,\n  setSelectedId,\n}) => {\n  let label;\n  switch (todo.priority) {\n    case 'High':\n      label = 'danger';\n      break;\n    case 'Normal':\n      label = 'warning';\n      break;\n    default:\n      label = 'success';\n      break;\n  }\n\n  const itemClass = todo.isDone ? 'list-item--done' : 'list-item';\n  return (\n    <section className={`thumbnail ${itemClass}`}>\n      <h3 className=\"h3\">{todo.title}</h3>\n      <p>{todo.description}</p>\n      <div className=\"item-wrapper\">\n        <span className={`label label-${label}`}> {todo.priority}</span>\n        <ButtonDropdown\n          handleUpdateClick={handleUpdateClick}\n          handleEditClick={handleEditClick}\n          handleDeleteClick={handleDeleteClick}\n          setSelectedId={setSelectedId}\n          todo={todo}\n        />\n      </div>\n    </section>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    priority: PropTypes.string.isRequired,\n    isDone: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleUpdateClick: PropTypes.func.isRequired,\n  handleEditClick: PropTypes.func.isRequired,\n  handleDeleteClick: PropTypes.func.isRequired,\n  setSelectedId: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../TodoItem';\n\nconst TodoList = ({\n  todos,\n  handleUpdateClick,\n  handleEditClick,\n  handleDeleteClick,\n  setSelectedId,\n}) => (\n  <ul className=\"container list-unstyled\">\n    {todos.map(todo => (\n      <li key={todo.id} className=\"col-xs-12 col-sm-6 col-md-3\">\n        <TodoItem\n          todo={todo}\n          handleUpdateClick={handleUpdateClick}\n          handleEditClick={handleEditClick}\n          handleDeleteClick={handleDeleteClick}\n          setSelectedId={setSelectedId}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nTodoList.defaultProps = {\n  todos: [],\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      priority: PropTypes.string.isRequired,\n      isDone: PropTypes.bool.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  handleUpdateClick: PropTypes.func.isRequired,\n  handleEditClick: PropTypes.func.isRequired,\n  handleDeleteClick: PropTypes.func.isRequired,\n  setSelectedId: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import TodoList from './TodoList';\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport shortid from 'shortid';\n\nexport default class Modal extends Component {\n  static propTypes = {\n    handleClose: PropTypes.func.isRequired,\n    handleAdd: PropTypes.func.isRequired,\n    handleUpdate: PropTypes.func.isRequired,\n    todoInEditMode: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      priority: PropTypes.string.isRequired,\n      isDone: PropTypes.bool.isRequired,\n    }),\n  };\n\n  static defaultProps = {\n    todoInEditMode: null,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: '',\n      description: '',\n      priority: 'Low',\n      isDone: false,\n    };\n  }\n\n  componentDidMount() {\n    const { todoInEditMode } = this.props;\n    if (todoInEditMode) {\n      const { title, description, priority, isDone } = todoInEditMode;\n      this.setState({ title, description, priority, isDone });\n    }\n  }\n\n  handleChange = ({ target: { value, name } }) => {\n    if (\n      (name === 'title' && value.length > 16) ||\n      (name === 'description' && value.length > 25)\n    )\n      return;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { title, description, priority, isDone } = this.state;\n    const { handleAdd, handleUpdate, handleClose, todoInEditMode } = this.props;\n    const todo = { title, description, priority, isDone };\n    if (!title || !description) {\n      toast.error('Fill all the fields.');\n      return;\n    }\n    if (todoInEditMode) {\n      todo.id = todoInEditMode.id;\n      handleUpdate(todoInEditMode.id, todo);\n    } else {\n      todo.id = shortid();\n      handleAdd(todo);\n    }\n    handleClose();\n  };\n\n  resetCreateForm = () =>\n    this.setState({\n      title: '',\n      description: '',\n      priority: 'Low',\n      isDone: false,\n    });\n\n  render() {\n    const { title, description, priority } = this.state;\n    const { handleClose } = this.props;\n    return (\n      <form\n        className=\"thumbnail col-md-4 cl-xs-10 modal-form\"\n        onSubmit={this.handleSubmit}\n      >\n        <label htmlFor=\"textLabel\">\n          Title:\n          <input\n            id=\"textLabel\"\n            name=\"title\"\n            value={title}\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Title\"\n            onChange={this.handleChange}\n          />\n        </label>\n        <label htmlFor=\"textareaLabel\">\n          Description:\n          <textarea\n            rows=\"5\"\n            id=\"textareaLabel\"\n            value={description}\n            name=\"description\"\n            className=\"form-control textarea\"\n            placeholder=\"Description\"\n            onChange={this.handleChange}\n          />\n        </label>\n        <label htmlFor=\"selectLabel\">\n          Priority:\n          <select\n            id=\"selectLabel\"\n            className=\"form-control\"\n            value={priority}\n            onChange={this.handleChange}\n            name=\"priority\"\n          >\n            <option value=\"High\">High</option>\n            <option value=\"Normal\">Normal</option>\n            <option value=\"Low\">Low</option>\n          </select>\n        </label>\n        <div className=\"row modal-form__wrapper\">\n          <button type=\"submit\" className=\"btn btn-primary col-md-3\">\n            Save\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-default col-md-3\"\n            onClick={handleClose}\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n","import Modal from './Modal';\n\nexport default Modal;\n","const filterTodos = (todos, title, priority, progress) => {\n  let filteredTodos = [...todos];\n  if (title) {\n    filteredTodos = filteredTodos.filter(todo =>\n      todo.title.toLowerCase().includes(title.toLowerCase()),\n    );\n  }\n  if (priority !== 'All') {\n    filteredTodos = filteredTodos.filter(todo => todo.priority === priority);\n  }\n  if (progress !== 'All') {\n    const isDone = progress === 'Done';\n    filteredTodos = filteredTodos.filter(todo => todo.isDone === isDone);\n  }\n\n  return filteredTodos;\n};\n\nexport default filterTodos;\n","const putTodoToEditMode = (todos, id) => todos.find(todo => todo.id === id);\n\nexport default putTodoToEditMode;\n","import React, { Component, createRef } from 'react';\nimport Form from '../Form';\nimport TodoList from '../TodoList';\nimport Modal from '../Modal';\nimport filterTodos from '../../helpers/filterTodos';\nimport putTodoToEditMode from '../../helpers/putTodoToEditMode';\n\nexport default class Dashboard extends Component {\n  backdropRef = createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todos: [],\n      isModalOpen: false,\n      selectedTodoId: null,\n      searchForm: {\n        title: '',\n        priority: 'All',\n        progress: 'All',\n      },\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUnmout() {\n    window.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  // FORM\n\n  handleSearchInputChange = ({ target: { value, name } }) =>\n    this.setState(state => ({\n      searchForm: { ...state.searchForm, [name]: value },\n    }));\n\n  // TODO LIST\n\n  handleUpdateTodo = (id, todo) => {\n    const { todos } = this.state;\n    const index = todos.indexOf(todos.find(task => task.id === id));\n    this.setState(state => ({\n      todos: [\n        ...state.todos.slice(0, index),\n        todo,\n        ...state.todos.slice(index + 1, todos.length),\n      ],\n      selectedTodoId: null,\n    }));\n  };\n\n  handleDeleteTodo = id =>\n    this.setState(state => ({\n      todos: [...state.todos.filter(todo => todo.id !== id)],\n    }));\n\n  setSelectedId = (id = null) => this.setState({ selectedTodoId: id });\n\n  // MODAL\n\n  handleOpenModal = () => this.setState({ isModalOpen: true });\n\n  handleCloseModal = () => {\n    const { selectedTodoId } = this.state;\n    this.setState({ isModalOpen: false });\n    if (selectedTodoId) this.setSelectedId();\n  };\n\n  handleKeyPress = e => {\n    if (e.code !== 'Escape') return;\n    this.handleCloseModal();\n  };\n\n  handleBackdropClick = e => {\n    const { current } = this.backdropRef;\n    if (current && e.target !== current) {\n      return;\n    }\n    this.handleCloseModal();\n  };\n\n  handleAddTodo = todo =>\n    this.setState(state => ({ todos: [todo, ...state.todos] }));\n\n  render() {\n    const { isModalOpen, todos, searchForm, selectedTodoId } = this.state;\n    const { title, priority, progress } = searchForm;\n    const todosToRender = filterTodos(todos, title, priority, progress);\n    const todoInEditMode = putTodoToEditMode(todos, selectedTodoId);\n\n    return (\n      <main className=\"main-content\">\n        <Form\n          title={title}\n          priority={priority}\n          progress={progress}\n          handleOpenModal={this.handleOpenModal}\n          handleChange={this.handleSearchInputChange}\n        />\n        <TodoList\n          todos={todosToRender}\n          handleUpdateClick={this.handleUpdateTodo}\n          handleEditClick={this.handleOpenModal}\n          handleDeleteClick={this.handleDeleteTodo}\n          setSelectedId={this.setSelectedId}\n        />\n        {isModalOpen && (\n          <div\n            className=\"backdrop container\"\n            ref={this.backdropRef}\n            onClick={this.handleBackdropClick}\n            role=\"button\"\n          >\n            <Modal\n              handleClose={this.handleCloseModal}\n              handleAdd={this.handleAddTodo}\n              handleUpdate={this.handleUpdateTodo}\n              todoInEditMode={todoInEditMode}\n            />\n          </div>\n        )}\n      </main>\n    );\n  }\n}\n","import React from 'react';\n\nconst Footer = () => (\n  <footer className=\"bg-primary footer\">\n    <div className=\"container\">\n      <h2 className=\"h3\">Roman Bezpalyi</h2>\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport Header from '../Header/Header';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Footer from '../Footer/Footer';\n\nconst TodosPage = () => (\n  <>\n    <Header />\n    <Dashboard />\n    <Footer />\n  </>\n);\n\nexport default TodosPage;\n","import React from 'react';\n\nconst NotFoundPage = () => (\n  <h1 className=\"h1 text-center\">Oops... Page not found.</h1>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport TodosPage from '../pages/TodosPage';\nimport NotFoundPage from '../pages/NotFoundPage';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Redirect to=\"/todos\" />\n      </Route>\n      <Route path=\"/todos\" component={TodosPage} />\n      <Route path=\"*\" component={NotFoundPage} />\n    </Switch>\n  );\n}\n\nexport default App;\n","import App from './App';\n\nexport default App;\n","import './styles/main.scss';\nimport './configs';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <HashRouter basename=\"/\">\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}